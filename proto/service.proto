syntax = "proto3";

package proto;
option go_package = ".;proto";


// @@@ - client connection request for connect to server
message Connect {
  string token = 1;
}

// close response
message Close {}

// error response
message ErrorResponse{
  string message = 1;
  int32 code = 2;
}
// message response
message MessageResponse{
  string msg_id = 1;
  Message msg = 2;
  string timestamp = 3;
  string from = 4;
}


message PingRequest{}
message PingResponse{}

message EmptyRequest{}

message LoginRequest{
  string username = 1;
  string password = 2;
}
message LoginResponse{
  string token = 1;
}

message SendMessageRequest{
  string req_id = 1;
  Message msg = 2;
}
message SendMessageResponse{
  string msg_id = 1;
}
// message struct which may be TEXT or FILE
message Message {
  oneof data{
    TextMessage text_msg = 2;
    FileMessage file_msg = 3;
  }
}
// text message
message TextMessage {
  string content = 1;
}
// file message
message FileMessage {
  oneof data{
    FileInfo info = 1;
    bytes chunk_data = 2;
    bool done = 3;
  }
}
message FileInfo {
  string name = 1;
  uint32 size = 2;
  string comment = 3;
}


service ChatService {
  rpc MessageChannel(Connect) returns (stream MessageResponse);
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc Ping(PingRequest) returns (PingResponse);

  rpc SendMessage(SendMessageRequest) returns (SendMessageResponse);
}
